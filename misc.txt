
# SELECT geometry, elevation_feet, CASE WHEN (elevation_feet % 1000::integer) = 0 THEN 3 WHEN (elevation_feet % 200::integer) = 0 THEN 2 ELSE 1 END AS class FROM contours
# subprocess.call(["gdal_contour", "-i", interval, "-snodata", "32767", "-a", el_column, "-f", "PostgreSQL", hgtPath, "PG:dbname=%s user=%s password=%s" % (dbname, user, password)])
#   gdal_contour -i 12.192 -snodata -32768 -a elevation -f PostgreSQL "PG:dbname=tiles" 
# update contours set elevation_ft = integer(elevation * 3.28084) 
# "shp2pgsql", "-a", "-s", "4326", "-g", column, path, table
# "shp2pgsql", "-p", "-s", "4326", "-I", "-g", column, path, table
# shp2pgsql -p -s 4326 -I -g geometry  

# reproject NLCD data, add overviews, and copy VRT file (with
# the custom color table).
# gdalwarp -multi -of GTiff \
#     -co ZLEVEL=9 -co COMPRESS=DEFLATE -co PREDICTOR=2 -co BIGTIFF=YES \
#     -t_srs EPSG:900913 $NLCD_DIR/nlcd2006_landcover_2-14-11.img \
#     $NLCD_DIR/nlcd2006.tif
# gdaladdo $NLCD_DIR/nlcd2006.tif 2 4 8 16 32 64
# cp nlcd2006.vrt $NLCD_DIR
#
